// Setting up Rasberry Pi for Self-Driving Car
// Created by Oguzhan San on 10.12.19.

// Installing opencv4

// ---Delete---
 sudo apt-get purge wolfram-engine    //education package of raspberry pi
 sudo apt-get purge libreoffice*     // MS office style editor of rasberrypi
 sudo apt-get clean // Clean the APT Cache (By default Ubuntu keeps every update it downloads and installs in a cache on your disk)

// ---Install---
 sudo apt-get autoremove   //autoremove autoremove is used to remove packages that were automatically installed to satisfy dependencies for other packages and are now no longer needed

// ---Expanding the SD card store to make it available for softwares---
 sudo raspi-config // 7-Advanced Options ->  A1 Expand Filesystem 

 sudo reboot // reboot the system
 df -h    // check the storage

// --- update raspberry pi --
 sudo apt-get upgrade
 sudo apt-get update

// --- Swapping the memory ---
 sudo nano /etc/dphys-swapfile   // to use virtual memory -> CONF_SWAPSIZE=2048 (for parallel computing installition)

 sudo /etc/init.d/dphys-swapfile stop
 sudo /etc/init.d/dphys-swapfile start

// ---install packages (OpenCV)---
//compiler
 sudo apt-get install build-essential cmake pkg-config                             //cross-platform developer package for OpenCV
 sudo apt-get install libjpeg-dev libtiff5-dev libjasper-dev libpng12-dev	// for images
 sudo apt-get install libavcodec-dev libavformat-dev libswscale-dev libv4l-dev  // for videos
 sudo apt-get install libxvidcore-dev libx264-dev   // encoder and decoder

// required installation for OpenCV
 sudo apt-get install cmake git libgtk2.0-dev pkg-config libavcodec-dev libavformat-dev libswscale-dev
 sudo apt-get install python-dev python-numpy libtbb2 libtbb-dev libjpeg-dev libpng-dev libtiff-dev libjasper-dev libdc1394-22-dev

// for Graphical User interface for OpenCV
 sudo apt-get install libgtk2.0-dev libgtk-3-dev    // GUI of OpenCV   gtk package
 sudo apt-get install libatlas-base-dev gfortran     // matrix function


// Creating OpenCV directory, clone OpenCV and opencv_contrib
 mkdir opencv
 cd ~/opencv
 git clone https://github.com/opencv/opencv.git
 git clone https://github.com/opencv/opencv_contrib.git // not included in main OpenCV packages

//Creating Build directory
 mkdir build
 cd build


//Ceating make file using CMAKE for installing directories
 cmake -D CMAKE_BUILD_TYPE=Release -DCMAKE_EXTRA_MODULES_PATH=../opencv_contrib/modules/ -D CMAKE_INSTALL_PREFIX=/usr/local ../opencv -DBUILD_opencv_java=OFF -DBUILD_opencv_python2=OFF -DBUILD_opencv_python3=OFF




// Parallel Computing
 make -j4
 sudo make install

 sudo ldconfig

 sudo nano /etc/dphys-swapfile  //. -> CONF_SWAPSIZE=100

 sudo /etc/init.d/dphys-swapfile stop
 sudo /etc/init.d/dphys-swapfile start


// ---Adding Package config file ---
 sudo nano /etc/ld.so.conf.d/opencv.conf // -> /usr/local/lib


 sudo ldconfig

//---Adding env variable-- 
 sudo nano /etc/bash.bashrc // -> PKG_CONFIG PATH=$PKG_CONFIG_PATH:/usr/local/lib/pkgconfig 

 export PKG_CONFIG_PATH




// ---Copying the config file--- 

geany open cv path for build
g++ $(pkg-config opencv4 --cflags --libs) -o %e %f


g++ $(pkg-config opencv4 --cflags --libs) -o g++ $(pkg-config raspicam --cflags --libs) -o %e %f


//---geany open cv path for build fro raspberry pi
g++ $(pkg-config opencv4 --cflags --libs) -o %e %f





//---Setting up Raspberrypi cam---

git clone https://github.com/cedricve/raspicam.git
cd raspicam
mkdir build
cd build
cmake ..
make j4
sudo make install
sudo ldconfig


g++ $(pkg-config raspicam --cflags --libs) -o %e %f






//---Package Information for pkg-config

prefix=/usr/local
exec_prefix=${prefix}
libdir=${exec_prefix}/lib
includedir_old=${prefix}/include/raspicam
includedir_new=${prefix}/include/raspicam

Name: raspicam
Description: Open Source Computer Vision Library
Version: 2.0.0
Libs: -L${exec_prefix}/lib -lraspicam -lraspicam_cv
Libs.private: -ldl -lm -lpthread -lrt
Cflags: -I${includedir_old} -I${includedir_new}



//---Updated Geany Path

g++ $(pkg-config opencv4 --cflags --libs) -o g++ $(pkg-config raspicam --cflags --libs) -o %e %f



g++ $(pkg-config opencv4 --cflags --libs) -o g++ $(pkg-config raspicam --cflags --libs) -o g++ $(pkg-config wiringpi --cflags --libs)-o %e %f
